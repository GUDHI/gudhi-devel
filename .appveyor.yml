image:
  - Visual Studio 2017

build:
  parallel: true
  verbosity: detailed

configuration:
  - Release

environment:
  # update the vcpkg cache even if build fails
  APPVEYOR_SAVE_CACHE_ON_ERROR: true

  matrix:
      - target: BuildAndTest
        CMAKE_FLAGS: -DWITH_GUDHI_EXAMPLE=ON -DWITH_GUDHI_TEST=ON -DWITH_GUDHI_UTILITIES=ON -DWITH_GUDHI_PYTHON=OFF
        PYTHON: "C:\\Python37-x64"
        GMP_INCLUDE_DIR: "c:/Tools/vcpkg/installed/x64-windows/include"
        GMP_LIBRARIES: "c:/Tools/vcpkg/installed/x64-windows/lib/mpir.lib"
        GMP_LIBRARIES_DIR: "c:/Tools/vcpkg/installed/x64-windows/lib"
        CMAKE_TOOLCHAIN_FILE: "c:/Tools/vcpkg/scripts/buildsystems/vcpkg.cmake"

cache:
  # comment these 2 lines to reset the cache
  # appveyor does not allow to recache vcpkg and pip separately
  - c:\Tools\vcpkg -> .github/vcpkg-requirements.txt, .github/build-requirements.txt, .github/test-requirements.txt
  - '%LOCALAPPDATA%\pip\Cache'

install:
  # Install packages with vcpkg
  - for /F "delims=" %%a in (.github/vcpkg-requirements.txt) do ( vcpkg install %%a )
  # Set the different paths
  - SET PATH=c:\Tools\vcpkg\installed\x64-windows\bin;%PATH%
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PYTHON%\Library\bin;%PATH%
  - SET PYTHONPATH=%PYTHON%\\Lib\\site-packages;%PYTHONPATH%
  # For Visual Studio 2017
  - CALL "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" amd64
  # Install pip packages
  - python -m pip install --upgrade pip
  - pip install -U -r .github/build-requirements.txt
  - pip install -U -r .github/test-requirements.txt

build_script:
  - git submodule update --init
  - mkdir build
  - cd build
  # Build and test all except the Python module
  - cmake -G "Visual Studio 15 2017 Win64" %CMAKE_FLAGS% -DGMP_INCLUDE_DIR=%GMP_INCLUDE_DIR% -DGMP_LIBRARIES=%GMP_LIBRARIES% -DGMP_LIBRARIES_DIR=%GMP_LIBRARIES_DIR% -DCMAKE_TOOLCHAIN_FILE=%CMAKE_TOOLCHAIN_FILE% ..
  - MSBuild GUDHIdev.sln /m /p:Configuration=Release /p:Platform=x64
  - ctest -j 4 --output-on-failure -C Release -E diff_files
  # Build and test the Python module
  - cmake -DWITH_GUDHI_PYTHON=ON .
  - cd src/python
  - MSBuild Cython.sln /m /p:Configuration=Release /p:Platform=x64
  - ctest -j 4 --output-on-failure -C Release
