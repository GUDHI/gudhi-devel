image:
  - Visual Studio 2017

build:
  parallel: true
  verbosity: detailed

configuration:
  - Release

environment:
  # update the vcpkg cache even if build fails
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  PYTHON: "C:\\Python37-x64"
  CMAKE_VCPKG_FLAGS: -DCMAKE_TOOLCHAIN_FILE=c:/Tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows

  matrix:
      - target: Examples
        CMAKE_FLAGS: -DWITH_GUDHI_EXAMPLE=ON -DWITH_GUDHI_TEST=OFF -DWITH_GUDHI_UTILITIES=OFF -DWITH_GUDHI_PYTHON=OFF

      - target: UnitaryTests
        CMAKE_FLAGS: -DWITH_GUDHI_EXAMPLE=OFF -DWITH_GUDHI_TEST=ON -DWITH_GUDHI_UTILITIES=OFF -DWITH_GUDHI_PYTHON=OFF

      - target: Utilities
        CMAKE_FLAGS: -DWITH_GUDHI_EXAMPLE=OFF -DWITH_GUDHI_TEST=OFF -DWITH_GUDHI_UTILITIES=ON -DWITH_GUDHI_PYTHON=OFF

      - target: Python
        CMAKE_FLAGS: -DWITH_GUDHI_EXAMPLE=OFF -DWITH_GUDHI_TEST=OFF -DWITH_GUDHI_UTILITIES=OFF -DWITH_GUDHI_PYTHON=ON


cache:
  - c:\Tools\vcpkg\installed
  - '%LOCALAPPDATA%\pip\Cache'

init:
  - echo %target%

install:
  - cd C:\Tools\vcpkg
  - git pull
  - .\bootstrap-vcpkg.bat
  - cd %APPVEYOR_BUILD_FOLDER%
  - set VCPKG_BUILD_TYPE=release
  - git submodule update --init
  - vcpkg install yasm-tool:x86-windows
  - vcpkg install boost-disjoint-sets boost-serialization boost-date-time boost-system boost-filesystem boost-units boost-thread boost-program-options eigen3 cgal --triplet x64-windows
  - SET PATH=c:\Tools\vcpkg\installed\x64-windows\bin;%PATH%
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PYTHON%\Library\bin;%PATH%
  - SET PYTHONPATH=%PYTHON%\\Lib\\site-packages;%PYTHONPATH%
  - CALL "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" amd64
  - python --version
  - pip --version
  - python -m pip install --user --upgrade pip
  - python -m pip install --user -r ext/gudhi-deploy/build-requirements.txt
  # No PyKeOps on windows, let's workaround this one.
  - for /F "tokens=*" %%A in (ext/gudhi-deploy/test-requirements.txt) do python -m pip install --user  %%A

build_script:
  - mkdir build
  - cd build
  - cmake -G "Visual Studio 15 2017 Win64" %CMAKE_FLAGS% %CMAKE_VCPKG_FLAGS% ..
  - if [%target%]==[Python] (
      cd src/python &
      type setup.py &
      MSBuild Cython.sln /m /p:Configuration=Release /p:Platform=x64 &
      ctest -j 1 --output-on-failure -C Release
    ) else (
      MSBuild GUDHIdev.sln /m /p:Configuration=Release /p:Platform=x64 &
      ctest -j 1 --output-on-failure -C Release -E diff_files
    )
