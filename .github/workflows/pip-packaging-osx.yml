name: pip packaging osx

on:
  release:
    types: [published]

env:
  MACOSX_DEPLOYMENT_TARGET: 13.0
  _PYTHON_HOST_PLATFORM: macosx-13.0-universal2
  ARCHFLAGS: "-arch arm64 -arch x86_64"

jobs:
  # Python 3.9+ specific case where NumPy 2.x will be supported
  # NumPy packages for osx x86 and arm are only available from 1.21.2, but stable for both versions from 1.21.4 and python 3.9+
  wheels:
    # Should use macos-latest, but python 3.9 is no more available from macos-14
    runs-on: macos-13
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        include:
          - python-version: "3.9"
            numpy-version: "1.21.4"
          - python-version: "3.10"
            numpy-version: "1.21.6"
          - python-version: "3.11"
            numpy-version: "1.23.2"
          - python-version: "3.12"
            numpy-version: "1.26.0"
          - python-version: "3.13"
            numpy-version: "2.1.0"
    name: Build wheels for Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      # For python>=3.9, numpy>=2.0 for package build and ABI compatibility with numpy 1.X and 2.X
      # cf. https://numpy.org/doc/stable/dev/depending_on_numpy.html#numpy-2-0-specific-advice
      - name: Install dependencies
        run: |
          brew update || echo "brew update failed, continuing..."
          brew install boost eigen gmp mpfr cgal || echo "brew install failed, continuing..."
          python -m pip install --user numpy>=2.0
          python -m pip install --user -r ext/gudhi-deploy/build-requirements.txt
          python -m pip install --user delocate
          ./scripts/build_osx_universal_gmpfr.sh
          # Now the universal libraries are in $PWD/deps-uni/lib
      - name: Build python wheel
        run: |
          export   GMP_LIB_DIR=$PWD/deps-uni/lib
          export GMPXX_LIB_DIR=$PWD/deps-uni/lib
          export  MPFR_LIB_DIR=$PWD/deps-uni/lib
          python --version
          python -m pip wheel -ve .
          export PATH="$PATH:`python -m site --user-base`/bin"
          delocate-listdeps --depending *.whl
          mkdir wheelhouse || true
          delocate-wheel --require-archs universal2 -w wheelhouse -v *.whl
      # Test ABI compatibility with numpy 1.X
      - name: Install and test python wheel
        run: |
          python -m pip install --user numpy~=${{ matrix.numpy-version }}
          python -m pip install --user pytest scipy matplotlib scikit-learn POT wheelhouse/*.whl
          python -c "import gudhi; print(gudhi.__version__)"
          cp data/points/human.off .
          python -m pytest src/python/test/test_alpha_complex.py
          python -m pytest src/python/test/test_betti_curve_representations.py
          python -m pytest src/python/test/test_bottleneck_distance.py
          python -m pytest src/python/test/test_collapse_edges.py
          python -m pytest src/python/test/test_cover_complex.py
          python -m pytest src/python/test/test_cubical_complex.py
          python -m pytest src/python/test/test_cubical_persistence_low_dim.py
          python -m pytest src/python/test/test_datasets_generators.py
          python -m pytest src/python/test/test_delaunay_complex.py
          python -m pytest src/python/test/test_dtm_rips_complex.py
          python -m pytest src/python/test/test_euclidean_witness_complex.py
          python -m pytest src/python/test/test_off.py
          python -m pytest src/python/test/test_persistence_graphical_tools.py
          python -m pytest src/python/test/test_reader_utils.py
          python -m pytest src/python/test/test_remote_datasets.py
          python -m pytest src/python/test/test_representations_interface.py
          python -m pytest src/python/test/test_representations_preprocessing.py
          python -m pytest src/python/test/test_representations.py
          python -m pytest src/python/test/test_rips_complex.py
          python -m pytest src/python/test/test_simplex_generators.py
          python -m pytest src/python/test/test_simplex_tree.py
          python -m pytest src/python/test/test_simplex_tree_serialization.py
          python -m pytest src/python/test/test_sklearn_cubical_persistence.py
          python -m pytest src/python/test/test_sklearn_rips_persistence.py
          python -m pytest src/python/test/test_subsampling.py
          python -m pytest src/python/test/test_tangential_complex.py
          python -m pytest src/python/test/test_time_delay.py
          python -m pytest src/python/test/test_tomato.py
          python -m pytest src/python/test/test_wasserstein_barycenter.py
          python -m pytest src/python/test/test_weighted_rips_complex.py
          python -m pytest src/python/test/test_witness_complex.py
      - name: Publish on PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m twine upload wheelhouse/*.whl
