name: pip packaging windows

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: windows-2019
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
    name: Build wheels for Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install dependencies
        run: |
          set VCPKG_BUILD_TYPE=release
          vcpkg install eigen3 cgal --triplet x64-windows
          IF %errorlevel% NEQ 0 exit /b %errorlevel%
          vcpkg version
          ls "C:\vcpkg\installed\x64-windows\bin\"
          python -m pip install --user -r .\ext\gudhi-deploy\build-requirements.txt
          IF %errorlevel% NEQ 0 exit /b %errorlevel%
          python -m pip install --user twine
          IF %errorlevel% NEQ 0 exit /b %errorlevel%
          python -m pip list
      - name: Build python wheel and install it
        run: |
          mkdir build
          cd ".\build\"
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=c:\vcpkg\scripts\buildsystems\vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows ..
          IF %errorlevel% NEQ 0 exit /b %errorlevel%
          Get-Location
          dir
          cd ".\src\python\"
          cp "C:\vcpkg\installed\x64-windows\bin\mpfr*.dll" ".\gudhi\"
          cp "C:\vcpkg\installed\x64-windows\bin\gmp*.dll" ".\gudhi\"
          python setup.py bdist_wheel
          IF %errorlevel% NEQ 0 exit /b %errorlevel%
          ls ".\dist\"
          cd ".\dist\"
          Get-ChildItem *.whl | ForEach-Object{python -m pip install --user $_.Name}
          IF %errorlevel% NEQ 0 exit /b %errorlevel%
      - name: Test python wheel
        run: |
          python -m pip install --user pytest
          python -c "import gudhi; print(gudhi.__version__)"
          python -m pytest ".\src\python\test\test_alpha_complex.py"
          IF %errorlevel% NEQ 0 exit /b %errorlevel%
      - name: Publish on PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: python -m twine upload build/src/python/dist/*
