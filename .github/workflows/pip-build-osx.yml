name: pip build osx

on: [push, pull_request]

env:
  MACOSX_DEPLOYMENT_TARGET: 10.14
  _PYTHON_HOST_PLATFORM: macosx-10.14-universal2
  ARCHFLAGS: "-arch arm64 -arch x86_64"

jobs:
  build:
    runs-on: macos-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10']
    name: Build wheels for Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install dependencies
        run: |
          brew update || true
          brew install boost eigen gmp mpfr cgal || true
          python -m pip install --user -r ext/gudhi-deploy/build-requirements.txt
          python -m pip install --user twine delocate
          mkdir deps-amd64
          cd deps-amd64
          tar xf "`brew fetch --bottle-tag=big_sur gmp        | sed -ne 's/^Downloaded to: //p'`"
          tar xf "`brew fetch --bottle-tag=big_sur mpfr       | sed -ne 's/^Downloaded to: //p'`"
          cd ..
          mkdir deps-arm64
          cd deps-arm64
          tar xf "`brew fetch --bottle-tag=arm64_big_sur gmp  | sed -ne 's/^Downloaded to: //p'`"
          tar xf "`brew fetch --bottle-tag=arm64_big_sur mpfr | sed -ne 's/^Downloaded to: //p'`"
          cd ..
          mkdir -p deps-uni/lib
          GMP1=deps-amd64/gmp/*/lib/libgmp.*.dylib
          GMP=`basename $GMP1`
          GMPXX1=deps-amd64/gmp/*/lib/libgmpxx.*.dylib
          GMPXX=`basename $GMPXX1`
          MPFR1=deps-amd64/mpfr/*/lib/libmpfr.*.dylib
          MPFR=`basename $MPFR1`
          lipo -create $GMP1 deps-arm64/gmp/*/lib/$GMP -output deps-uni/lib/$GMP
          lipo -create $GMPXX1 deps-arm64/gmp/*/lib/$GMPXX -output deps-uni/lib/$GMPXX
          lipo -create $MPFR1 deps-arm64/mpfr/*/lib/$MPFR -output deps-uni/lib/$MPFR
          ## Unnecessary, lipo already added the right id
          #install_name_tool -id $PWD/deps-uni/lib/$GMP deps-uni/lib/$GMP
          #install_name_tool -id $PWD/deps-uni/lib/$GMPXX deps-uni/lib/$GMPXX
          #install_name_tool -id $PWD/deps-uni/lib/$MPFR deps-uni/lib/$MPFR
          BADGMP=`otool -L deps-uni/lib/$MPFR|sed -ne 's/[[:space:]]*\(.*libgmp\..*dylib\).*/\1/p'`
          install_name_tool -change $BADGMP $PWD/deps-uni/lib/$GMP deps-uni/lib/$MPFR
          BADGMP=`otool -L deps-uni/lib/$GMPXX|sed -ne 's/[[:space:]]*\(.*libgmp\..*dylib\).*/\1/p'`
          install_name_tool -change $BADGMP $PWD/deps-uni/lib/$GMP deps-uni/lib/$GMPXX
          ln -s $GMP deps-uni/lib/libgmp.dylib
          ln -s $GMPXX deps-uni/lib/libgmpxx.dylib
          ln -s $MPFR deps-uni/lib/libmpfr.dylib
          ls -l deps-uni/lib
          otool -L deps-uni/lib/*.*.dylib
      - name: Build python wheel
        run: |
          export MPFR_LIB_DIR=$PWD/deps-uni/lib
          export GMP_LIB_DIR=$PWD/deps-uni/lib
          export GMPXX_LIB_DIR=$PWD/deps-uni/lib
          python --version
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DPython_ADDITIONAL_VERSIONS=3 ..
          cd src/python
          python setup.py bdist_wheel
          /Users/runner/.local/bin/delocate-wheel -v dist/*.whl
      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: mac wheel
          path: build/src/python/dist/*.whl
      - name: Install and test python wheel
        run: |
          python -m pip install --user pytest build/src/python/dist/*.whl
          python -c "import gudhi; print(gudhi.__version__)"
          python -m pytest src/python/test/test_alpha_complex.py
