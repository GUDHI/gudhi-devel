trigger:
  batch: true
  branches:
    include:
    - '*'  # All branches

jobs:
  
  - job: 'Test'
    displayName: "Build and test"
    timeoutInMinutes: 0
    cancelTimeoutInMinutes: 60
  
    strategy:
      matrix:
#        macOSrelease:
#          imageName: 'macos-10.14'
#          CMakeBuildType: Release
#          compilerInitialization: ''
#          customInstallation: 'brew update && brew install graphviz doxygen boost eigen gmp mpfr tbb cgal'
#          customCmakeOptions: ''
#        macOSdebug:
#          imageName: 'macos-10.14'
#          CMakeBuildType: Debug
#          compilerInitialization: ''
#          customInstallation: 'brew update && brew install graphviz doxygen boost eigen gmp mpfr tbb cgal'
#          customCmakeOptions: ''
        WindowsOSRelease:
          imageName: 'vs2017-win2016'
          CMakeBuildType: Release
          compilerInitialization: 'call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"'
          customInstallation: 'where vcpkg & for /F "delims=" %%a in (.github/vcpkg-requirements.txt) do ( vcpkg install %%a )'
          customCmakeOptions: '-DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -G "Visual Studio 15 2017 Win64"'

    pool:
      vmImage: $(imageName)
  
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        architecture: 'x64'
  
    - script: |
        $(customInstallation)
        git submodule update --init
        python -m pip install --upgrade pip
        python -m pip install --user -r .github/build-requirements.txt
        python -m pip install --user -r .github/test-requirements.txt
      displayName: 'Install build dependencies'
    - script: |
        $(compilerInitialization)
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE:STRING=$(CMakeBuildType) $(customCmakeOptions) -DWITH_GUDHI_TEST=ON -DWITH_GUDHI_UTILITIES=ON -DWITH_GUDHI_PYTHON=ON -DPython_ADDITIONAL_VERSIONS=3 ..
        make
        make doxygen
        ctest -j 8 --output-on-failure -E sphinx # remove sphinx build as it fails
      displayName: 'Build, test and documentation generation'
